selectRuleRRF <-
function(ruleMetric,X,target){
  ruleI = sapply(ruleMetric[,"condition"],rule2Table,X,target)
<<<<<<< HEAD
  
  # ORIGINAL
  coefReg <- 0.95 - 0.05*as.numeric(ruleMetric[,"len"])/max(as.numeric(ruleMetric[,"len"]))
  
  # OLD
  #coefReg <- unlist(lapply(as.numeric(ruleMetric[,"li"]), function(x) { return(max(0,x)); })) / max(as.numeric(ruleMetric[,"li"]))
  
  # MY VERSION
  #lis = unlist(lapply(as.numeric(ruleMetric[,"li"]), function(x) { return(abs(x)); }))
  #coefReg <- lis / max(lis)
=======
  #coefReg <- 0.95 - 0.05*as.numeric(ruleMetric[,"len"])/max(as.numeric(ruleMetric[,"len"]))
  
  #coefReg <- unlist(lapply(as.numeric(ruleMetric[,"li"]), function(x) { return(max(0,x)); })) / max(as.numeric(ruleMetric[,"li"]))
  lis = unlist(lapply(as.numeric(ruleMetric[,"li"]), function(x) { return(abs(x)); }))
  coefReg <- lis / max(lis)
>>>>>>> ed93fbe4a152fbf8dcc3e8d449a9b3d2c0d194cd
  
  rf <- RRF(ruleI,as.factor(target), flagReg = 1, coefReg=coefReg, mtry = (ncol(ruleI)*1/2) , ntree=50, maxnodes= 10,replace=FALSE) 
  imp <- rf$importance/max(rf$importance)
  feaSet <- which(imp > 0.01)
  ruleSetPrunedRRF <- cbind(ruleMetric[feaSet,,drop=FALSE],impRRF=imp[feaSet])
  ix = order(as.numeric(ruleSetPrunedRRF[,"impRRF"]),
              - as.numeric(ruleSetPrunedRRF[,"err"]),
              - as.numeric(ruleSetPrunedRRF[,"len"]),
              decreasing=TRUE)
  ruleSelect <- ruleSetPrunedRRF[ix,,drop=FALSE]
  return(ruleSelect)
}
